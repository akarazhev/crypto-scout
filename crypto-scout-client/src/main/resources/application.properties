# MIT License
#
# Copyright (c) 2025 Andrey Karazhev
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

# Client settings
client.connect.timeout.ms=10000
# CoinMarketCap settings
cmc.connect.timeout.ms=10000
cmc.fetch.interval.ms=600000
cmc.circuit.breaker.threshold=5
cmc.circuit.breaker.timeout.ms=30000
cmc.rate.limit.ms=2100
cmc.retry.base.ms=1000
cmc.retry.max.ms=60000
cmc.retry.jitter=0.2
# CoinMarketCap API settings
cmc.api.key=
# RabbitMQ Connection settings
amqp.exchange.metrics=metrics-exchange
amqp.queue.cmc_fear_greed_index=metrics-cmc-fear-greed-index-queue
amqp.queue.bybit_launch_pool=metrics-bybit-launch-pool-queue
amqp.queue.dead=metrics-dead-letter-queue
amqp.queue.client=crypto-scout-client-queue
amqp.queue.ttl.ms=21600000
amqp.queue.max.length=2500
# Application settings
spring.application.name=crypto-scout-client
spring.main.banner-mode=off
spring.rabbitmq.host=${SPRING_RABBITMQ_HOST:localhost}
spring.rabbitmq.port=${SPRING_RABBITMQ_PORT:5672}
spring.rabbitmq.username=${crypto-scout.rabbit-m-q.username}
spring.rabbitmq.password=${crypto-scout.rabbit-m-q.password}

# Secure configuration properties
crypto-scout.api-keys.coin-market-cap=${CMC_API_KEY:}
crypto-scout.api-keys.bybit=${BYBIT_API_KEY:}
crypto-scout.rabbit-m-q.username=${RABBITMQ_USERNAME:guest}
crypto-scout.rabbit-m-q.password=${RABBITMQ_PASSWORD:guest}

# Actuator settings
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=when_authorized
management.endpoint.health.probes.enabled=true
management.health.livenessState.enabled=true
management.health.readinessState.enabled=true
management.metrics.tags.application=${spring.application.name}
management.info.env.enabled=true
management.info.java.enabled=true
management.info.os.enabled=true
management.endpoint.env.keys-to-sanitize=password,secret,key,token,.*credentials.*,.*secret.*,.*password.*,.*key.*,.*token.*

# Resilience4j Circuit Breaker configuration
resilience4j.circuitbreaker.instances.cmcDataService.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.cmcDataService.slidingWindowSize=10
resilience4j.circuitbreaker.instances.cmcDataService.minimumNumberOfCalls=5
resilience4j.circuitbreaker.instances.cmcDataService.failureRateThreshold=50
resilience4j.circuitbreaker.instances.cmcDataService.waitDurationInOpenState=30000
resilience4j.circuitbreaker.instances.cmcDataService.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.cmcDataService.automaticTransitionFromOpenToHalfOpenEnabled=true

# Resilience4j Retry configuration
resilience4j.retry.instances.cmcDataService.maxAttempts=3
resilience4j.retry.instances.cmcDataService.waitDuration=1000
resilience4j.retry.instances.cmcDataService.enableExponentialBackoff=true
resilience4j.retry.instances.cmcDataService.exponentialBackoffMultiplier=2
resilience4j.retry.instances.cmcDataService.retryExceptions=java.io.IOException,java.net.ConnectException

# Graceful shutdown configuration
server.shutdown=graceful
spring.lifecycle.timeout-per-shutdown-phase=20s
shutdown.wait.seconds=10

# Logging configuration
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss.SSS} %5p ${PID:- } [%15.15t] %-40.40logger{39} : %m%n%wEx
logging.level.root=INFO
logging.level.com.github.akarazhev=INFO
logging.level.org.springframework.amqp=INFO

# Enable JSON logging format for production
# Uncomment for production use
#spring.main.banner-mode=off
#logging.pattern.console=

# OpenAPI/Swagger configuration
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operationsSorter=method
springdoc.swagger-ui.tagsSorter=alpha
springdoc.swagger-ui.tryItOutEnabled=true
springdoc.swagger-ui.filter=true
spring.application.name=crypto-scout-client
spring.application.version=0.0.1
