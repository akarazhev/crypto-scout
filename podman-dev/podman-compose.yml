version: "3.9"

services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: crypto-scout-mq
    hostname: rabbitmq
    ports:
      - "5672:5672"   # AMQP protocol
      - "15672:15672" # Management UI
      - "5552:5552"   # Stream protocol (required for RabbitMQ streams)
    volumes:
      - "./data/rabbitmq:/var/lib/rabbitmq"
      - "./rabbitmq/enabled_plugins:/etc/rabbitmq/enabled_plugins"
      - "./rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf"
      - "./rabbitmq/definitions.json:/etc/rabbitmq/definitions.json"
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
      - RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=-rabbit disk_free_limit 2147483648 -rabbit vm_memory_high_watermark 0.6
    networks:
      - crypto-scout
    healthcheck:
      test: [ "CMD", "rabbitmq-diagnostics", "check_port_connectivity" ]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    ulimits:
      nofile:
        soft: 65536
        hard: 65536

  postgres:
    image: timescale/timescaledb:latest-pg13
    container_name: crypto-scout-db
    ports:
      - "5432:5432"
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - crypto-scout
    environment:
      - POSTGRES_DB=crypto_scout
      - POSTGRES_USER=sa
      - POSTGRES_PASSWORD=sa
      - TIMESCALEDB_TELEMETRY=off
      # TimescaleDB tuning parameters
      - TIMESCALEDB_TUNE_MAX_CONNECTIONS=100
      - TIMESCALEDB_TUNE_MAX_BACKGROUND_WORKERS=8
      - TIMESCALEDB_TUNE_MAX_PARALLEL_WORKERS=4
      - TIMESCALEDB_TUNE_MEMORY=512MB
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U sa -d crypto_scout" ]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M

networks:
  crypto-scout:
    driver: bridge